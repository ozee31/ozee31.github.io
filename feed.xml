<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flavien BENINCA (ozee31)</title>
    <description>Développeur Web basé à Toulouse spécialisé dans le back-end en PHP avec de bonnes connaissances en front-end</description>
    <link>http://ozee31.github.io/</link>
    <atom:link href="http://ozee31.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 16 Jun 2016 13:30:24 +0000</pubDate>
    <lastBuildDate>Thu, 16 Jun 2016 13:30:24 +0000</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>[vuejs] Démarrer avec bootstrap</title>
        <description>&lt;h1 id=&quot;vuejs---dmarrer-avec-bootstrap&quot;&gt;Vuejs - Démarrer avec bootstrap&lt;/h1&gt;

&lt;p&gt;Dans ce tutoriel, nous allons voir comment démarrer un projet avec &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; (en mode SASS) sur le framework &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vuejs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;prrequis&quot;&gt;Prérequis&lt;/h2&gt;
&lt;p&gt;Pour suivre ce tuto vous devez connaitre un minimum le framework &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vuejs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;environnement&quot;&gt;Environnement&lt;/h2&gt;
&lt;p&gt;Voici ma configuration pour cette démo&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Une machine Windows 10 (ne me fouettez pas SVP)&lt;/li&gt;
  &lt;li&gt;NPM en version 5&lt;/li&gt;
  &lt;li&gt;Vuejs en version 1.0.21 avec webpack&lt;/li&gt;
  &lt;li&gt;Bootstrap-sass en version 3.3.6&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cration-du-projet&quot;&gt;Création du projet&lt;/h2&gt;
&lt;p&gt;Je démarre toujours un projet Vuejs grâce à vue-cli afin d’installer Vuejs grâce à webpack.&lt;/p&gt;

&lt;p&gt;Si ce n’est pas déjà fait vous devez l’installer globalement&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g vue-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On peut ensuite créer le projet&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vue init webpack tuto
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Vous vous déplacez dans le dossier du projet et vous installez les dépendances de vuejs&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd tuto
npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enfin on installe les dépendances propre à environnement à savoir : bootstrap, jquery et ce qu’il faut pour compiler le sass&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -S bootstrap-sass
npm install -S jquery
npm install sass-loader node-sass webpack --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;prparation-de-la-vue&quot;&gt;Préparation de la vue&lt;/h2&gt;

&lt;p&gt;Nous allons modifier le fichier de base &lt;code class=&quot;highlighter-rouge&quot;&gt;App.vue&lt;/code&gt;afin d’intégrer un petit exemple de page utilisant bootstrap.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// src/App.vue

&amp;lt;template&amp;gt;
  &amp;lt;div id=&quot;app&quot;&amp;gt;
    &amp;lt;div class=&quot;container&quot;&amp;gt;

      &amp;lt;!-- Static navbar --&amp;gt;
      &amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
        &amp;lt;div class=&quot;container-fluid&quot;&amp;gt;
          &amp;lt;div class=&quot;navbar-header&quot;&amp;gt;
            &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbar&quot; aria-expanded=&quot;false&quot; aria-controls=&quot;navbar&quot;&amp;gt;
              &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt;
              &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
              &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
              &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;/button&amp;gt;
            &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;Project name&amp;lt;/a&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div id=&quot;navbar&quot; class=&quot;navbar-collapse collapse&quot;&amp;gt;
            &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt;
              &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li class=&quot;dropdown&quot;&amp;gt;
                &amp;lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&amp;gt;Dropdown &amp;lt;span class=&quot;caret&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&quot;dropdown-menu&quot;&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Another action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Something else here&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li role=&quot;separator&quot; class=&quot;divider&quot;&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li class=&quot;dropdown-header&quot;&amp;gt;Nav header&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;Separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&quot;#&quot;&amp;gt;One more separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
              &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
            &amp;lt;ul class=&quot;nav navbar-nav navbar-right&quot;&amp;gt;
              &amp;lt;li class=&quot;active&quot;&amp;gt;&amp;lt;a href=&quot;./&quot;&amp;gt;Default &amp;lt;span class=&quot;sr-only&quot;&amp;gt;(current)&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&quot;../navbar-static-top/&quot;&amp;gt;Static top&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&quot;../navbar-fixed-top/&quot;&amp;gt;Fixed top&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
          &amp;lt;/div&amp;gt;&amp;lt;!--/.nav-collapse --&amp;gt;
        &amp;lt;/div&amp;gt;&amp;lt;!--/.container-fluid --&amp;gt;
      &amp;lt;/nav&amp;gt;

      &amp;lt;!-- Main component for a primary marketing message or call to action --&amp;gt;
      &amp;lt;div class=&quot;jumbotron&quot;&amp;gt;
        &amp;lt;h1&amp;gt;Navbar example&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;This example is a quick exercise to illustrate how the default, static navbar and fixed to top navbar work. It includes the responsive CSS and HTML, so it also adapts to your viewport and device.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;
          &amp;lt;a class=&quot;btn btn-lg btn-primary&quot; href=&quot;../../components/#navbar&quot; role=&quot;button&quot;&amp;gt;View navbar docs »&amp;lt;/a&amp;gt;
        &amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import Hello from &#39;./components/Hello&#39;

export default {
  components: {
    Hello
  }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Maintenant si vous lancez le serveur de dev avec la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run dev&lt;/code&gt; pour pouvez voir une belle page non stylé.&lt;/p&gt;

&lt;h2 id=&quot;je-veux-du-style&quot;&gt;Je veux du style&lt;/h2&gt;

&lt;h3 id=&quot;architecture&quot;&gt;Architecture&lt;/h3&gt;

&lt;p&gt;Dans le dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; je vous invite à créer des dossiers et fichiers vide comme ci-dessous&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;src/
---assets/
------scss/
---------design.scss
---------bootstrap/
------------bootstrap-custom.scss
------------variables.scss
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;designscss&quot;&gt;design.scss&lt;/h3&gt;

&lt;p&gt;C’est le fichier principal, c’est lui qui sera appelé par votre page &lt;code class=&quot;highlighter-rouge&quot;&gt;App.vue&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// On importe bootstrap
@import &quot;./bootstrap/bootstrap-custom&quot;;

// On fait ce qu&#39;on veut après
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;variablesscss&quot;&gt;variables.scss&lt;/h3&gt;

&lt;p&gt;Ce fichier permet de personnaliser bootstrap à votre guise, voici un exemple de surcharge du fichier par défaut&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * Toute cette partie permet de surcharger les variables de bootstrap
 */

// La je modifie la couleur principale
$brand-primary: #5a3966;


/**
 * J&#39;importe enfin le fichier de variables par défaut de bootstrap qui va permettre de définir les variables que je n&#39;ai pas surchargées
 */
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/variables&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;bootstrap-customscss&quot;&gt;bootstrap-custom.scss&lt;/h3&gt;

&lt;p&gt;Ce fichier va charger tous les modules de bootstrap&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Core variables and mixins
@import &quot;./variables&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins&quot;;

// Reset and dependencies
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/normalize&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/print&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/glyphicons&quot;;

// Core CSS
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/scaffolding&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/type&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/code&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/grid&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/tables&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/forms&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/buttons&quot;;

// Components
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/component-animations&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/dropdowns&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/button-groups&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/input-groups&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/navs&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/navbar&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/breadcrumbs&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/pagination&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/pager&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/labels&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/badges&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/jumbotron&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/thumbnails&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/alerts&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/progress-bars&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/media&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/list-group&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/panels&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/responsive-embed&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/wells&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/close&quot;;

// Components JavaScript
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/modals&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/tooltip&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/popovers&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/carousel&quot;;

// Utility classes
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/utilities&quot;;
@import &quot;node_modules/bootstrap-sass/assets/stylesheets/bootstrap/responsive-utilities&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Libre à vous de surcharger ou de ne pas charger des modules en particulier. On voit qu’on a bien surcharger notre fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;variable.scss&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;allez-cest-parti&quot;&gt;Allez c’est parti&lt;/h3&gt;

&lt;p&gt;Il nous reste plus qu’à charger notre fichier principal dans la vue&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Code à rajouter dans le ficier &quot;App.vue&quot;

&amp;lt;style lang=&quot;scss&quot;&amp;gt;
  @import &#39;src/assets/scss/design.scss&#39;;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et quand regarde le résultat……… &lt;strong&gt;BOOM !!!&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Module not found: Error: Cannot resolve &#39;file&#39; or &#39;directory&#39; ../fonts/bootstrap/glyphicons-halflings-regular.eot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En fait bootstrap ne parviens plus à charger ses fontes, il va juste falloir surcharger une petite variable&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Dans &quot;variables.scss&quot; surchargez cette variable (insérer la ligne avant le @import final, pas après)

$icon-font-path: &quot;/node_modules/bootstrap-sass/assets/fonts/bootstrap/&quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Maintenant on a une “belle” page mais si vous essayez de déplier le Dropdown cela ne fonctionne pas. C’est tout à fait normal car le javascript n’est pas chargé.&lt;/p&gt;

&lt;h2 id=&quot;javascript&quot;&gt;Javascript&lt;/h2&gt;

&lt;p&gt;Pour charger la librairie js de bootstrap rien de plus simple&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Code à rajouter dans votre fichier &quot;src/main.js&quot;

import jQuery from &#39;jQuery&#39;
window.jQuery = window.$ = jQuery
require(&#39;bootstrap-sass&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et voilà vous avez maintenant un Bootstrap entièrement personnalisable pour votre application Vuejs&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jun 2016 08:00:00 +0000</pubDate>
        <link>http://ozee31.github.io/2016/06/15/vuejs-demarrer-avec-bootstrap.html</link>
        <guid isPermaLink="true">http://ozee31.github.io/2016/06/15/vuejs-demarrer-avec-bootstrap.html</guid>
        
        
      </item>
    
      <item>
        <title>[js] Le LocalStorage, en plus simple et plus complet</title>
        <description>&lt;h1 id=&quot;le-localstorage-en-plus-simple-et-plus-complet&quot;&gt;Le LocalStorage, en plus simple et plus complet&lt;/h1&gt;
&lt;p&gt;Nous allons voir qu’avec la librairie Cachejs, il est relativement simple de stocker des données côté client en utilisant le LocalStorage du navigateur.&lt;/p&gt;

&lt;h2 id=&quot;qusaco-&quot;&gt;Quésaco ?&lt;/h2&gt;

&lt;p&gt;On va commencer par une petite définition à base de wikipedia
&amp;gt; Le stockage web local ou stockage DOM (Document Object Model) est une technique d’enregistrement de données dans un navigateur web. Le stockage web local permet l’enregistrement persistant, comme avec les cookies mais avec une capacité bien plus grande, et sans avoir à rajouter de données dans l’entête de requête HTTP. Il existe deux types de stockage web local : le stockage local et le stockage de session, équivalant respectivement aux cookies persistants et aux cookies de session.&lt;/p&gt;

&lt;p&gt;LocalStorage est donc une API qui est compatible avec la plupart des navigateurs (pour peux qu’on soit moderne), à savoir Chrome, Firefox, IE (à partir de la 8), Opera, Safari.&lt;/p&gt;

&lt;h2 id=&quot;en-avant-guingamp&quot;&gt;En avant &lt;del&gt;Guingamp&lt;/del&gt;&lt;/h2&gt;

&lt;p&gt;Pour cette démonstration nous n’avons pas besoin de grand chose, on va créer une page HTML avec un script JS donc pas besoin de serveur Apache ou autre ça va être très simple.&lt;/p&gt;

&lt;p&gt;Je vais juste utiliser &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt; pour installer la librairie mais libre à vous d’utiliser &lt;code class=&quot;highlighter-rouge&quot;&gt;bower&lt;/code&gt; ou de télécharger les sources directement sur github.&lt;/p&gt;

&lt;p&gt;D’ailleur en parlant de source voici le &lt;a href=&quot;https://github.com/ozee31/cachejs&quot;&gt;repository&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;installation-et-prparation&quot;&gt;Installation et préparation&lt;/h2&gt;

&lt;p&gt;Pour cette démonstration je vais initialiser un projet npm&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SHELL&quot;&gt;    npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis j’installer la librairie (à ce jour la version 1.0)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SHELL&quot;&gt;    npm install ozee-cachejs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Je vais créer ensuite un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;    &amp;lt;!doctype html&amp;gt;

    &amp;lt;html lang=&quot;fr&quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
        &amp;lt;title&amp;gt;Cachejs demo&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div id=&quot;output&quot;&amp;gt;

        &amp;lt;/div&amp;gt;

        &amp;lt;script src=&quot;node_modules/ozee-cachejs/dist/cache.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&quot;demo.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
    &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;demo.js&lt;/code&gt; avec un petit bout de code qui va nous permettre de savoir si la lib est chargé&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JS&quot;&gt;    (function() {
        var output = document.getElementById(&#39;output&#39;);

        if ( typeof Cachejs === &#39;undefined&#39; ) {
            output.innerHTML = &#39;Lib non chargé&#39;;
            return false;
        }

        output.innerHTML = &#39;Lib chargé&#39;;
    })();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On démarre notre fichier index.html dans notre navigateur favori et si tout se passe bien on devrait voir s’afficher&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lib chargé&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si ce n’est pas le cas je vous invite à vérifier le chemin vers la livrairie.&lt;/p&gt;

&lt;h2 id=&quot;prsentation&quot;&gt;Présentation&lt;/h2&gt;

&lt;p&gt;Avant de commencer à utiliser la librairie, je pense q’une petite présentation s’impose.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;1 = 2&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tu te fous pas un peu de moi là ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Je vous rassure, je suis meilleur que ça en mathématique. Tout ça pour vous dire que cette librairie est composé de 2 classes qui partagent exactement la même API.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cachejs.Local&lt;/code&gt; : utilise &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/API/Window/localStorage&quot;&gt;le localStorage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cachejs.Session&lt;/code&gt; : utilise &lt;a href=&quot;https://developer.mozilla.org/fr/docs/Web/API/Window/sessionStorage&quot;&gt;le sessionStorage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;La propriété localStorage vous permet d’accéder à un objet local Storage. Le localStorage est similaire au sessionStorage. La seul différence : les données stockées dans le localStorage n’ont pas de délai d’expiration, les données stockées dans le sessionStorage sont nettoyées quand la session navigateur prend fin — donc quand on ferme le navigateur.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;pourquoi-&quot;&gt;Pourquoi ?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Et elle m’apporte quoi cette librairie par rapport à l’API de base ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Concrètement, par rapport à l’api standard vous pourrez :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stocker des données complexe (array, object)&lt;/li&gt;
  &lt;li&gt;faire expirer vos données au bout d’un certain temps&lt;/li&gt;
  &lt;li&gt;stocker des données en lecture seule&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mthodes-man&quot;&gt;Méthodes man&lt;/h3&gt;

&lt;p&gt;Voici un bref aperçu des méthodes disponible :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;set&lt;/strong&gt; : stocker une donnée&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;get&lt;/strong&gt; : récupérer une donnée stocké&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;remove&lt;/strong&gt; : supprimer une donnée&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clear&lt;/strong&gt; : vider tout le cache&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;isExpired&lt;/strong&gt; : indique si la donnée a expiré&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;isReadonly&lt;/strong&gt; : indique si la donnée est en lecture seule&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;alors-on-danse-commence&quot;&gt;Alors on &lt;del&gt;danse&lt;/del&gt; commence&lt;/h2&gt;

&lt;h3 id=&quot;set-et-match&quot;&gt;Set et match&lt;/h3&gt;
&lt;p&gt;Nous allons stocker divers types de données (string, array, objet…) et les afficher ensuite dans notre balise &lt;code class=&quot;highlighter-rouge&quot;&gt;output&lt;/code&gt;. Je vous invite donc à modifier le fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;demo.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JS&quot;&gt;    // demo.js

    (function() {
        var output = document.getElementById(&#39;output&#39;);

        if ( typeof Cachejs === &#39;undefined&#39; ) {
            output.innerHTML = &#39;Lib non chargé&#39;;
            return false;
        }

        // On réinitialise le cache
        Cachejs.Local.clear();
        Cachejs.Session.clear();

        /**
         * Stockage des données
         */
            // stockage d&#39;un string
            Cachejs.Local.set(&#39;monString&#39;, &#39;je suis un string&#39;);

            // stockage d&#39;un booléen en Session
            Cachejs.Session.set(&#39;monBool&#39;, true);

            // stockage d&#39;un array
            Cachejs.Local.set(&#39;monArray&#39;, [1,2,3]);

            // stockage d&#39;un objet
            Cachejs.Local.set(&#39;monObjet&#39;, {prenom: &#39;Lary&#39;, nom: &#39;Gole&#39;});


        /**
         * Récupération des données
         */
            output.innerHTML = &#39;&#39;;

            // On affiche le cache local de la clé &#39;monString&#39;
            output.innerHTML += &#39;monString = &#39; + Cachejs.Local.get(&#39;monString&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

            // Si on affiche le cache local de la clé &#39;monBool&#39; cela affiche &#39;null&#39; car il a été enregistré en cache de session
            output.innerHTML += &#39;monBool (local) = &#39; + Cachejs.Local.get(&#39;monBool&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

            // En revanche avec le cache session ça marche
            output.innerHTML += &#39;monBool (sessoin) = &#39; + Cachejs.Session.get(&#39;monBool&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

            // On affiche notre array
            output.innerHTML += &#39;monArray = &#39; + Cachejs.Local.get(&#39;monArray&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

            // Et pour finir notre objet
            output.innerHTML += &#39;monObjet = &#39; + JSON.stringify( Cachejs.Local.get(&#39;monObjet&#39;) ) + &#39;&amp;lt;br&amp;gt;&#39;;
    })();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Une fois la page rafraîchie vous devrez voir apparaître :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    monString = je suis un string
    monBool (local) = null
    monBool (sessoin) = true
    monArray = 1,2,3
    monObjet = {&quot;prenom&quot;:&quot;Lary&quot;,&quot;nom&quot;:&quot;Gole&quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;aller-plus-loin&quot;&gt;Aller plus loin&lt;/h3&gt;

&lt;p&gt;Si vous êtes toujours là (et je l’espère), on va comme le titre l’indique, aller plus loin, en utilisant l’expiration des données et la lecture seule.
On repart à zéro avec notre &lt;code class=&quot;highlighter-rouge&quot;&gt;demo.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JS&quot;&gt;    // demo.js

    (function() {
        var output = document.getElementById(&#39;output&#39;);

        if ( typeof Cachejs === &#39;undefined&#39; ) {
            output.innerHTML = &#39;Lib non chargé&#39;;
            return false;
        }

        // On réinitialise le cache
        Cachejs.Local.clear();
        Cachejs.Session.clear();
        output.innerHTML = &#39;&#39;;

        /**
         * Lecture seule
         */
            Cachejs.Local.set(&#39;readOnly&#39;, &#39;Je suis en lecture seule&#39;, null, true);

            // Je ne peux donc pas modifié la donnée
            Cachejs.Local.set(&#39;readOnly&#39;, &#39;Je ne peux pas être modifié&#39;);
            output.innerHTML += &#39;readOnly = &#39; + Cachejs.Local.get(&#39;readOnly&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

            // Je ne peux pas la supprimer non plus
            Cachejs.Local.remove(&#39;readOnly&#39;);
            output.innerHTML += &#39;readOnly = &#39; + Cachejs.Local.get(&#39;readOnly&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

        /**
         * Expiration
         */
            Cachejs.Local.set(&#39;expiration&#39;, &#39;Je vais expirer dans 3 secondes&#39;, 3);

            // J&#39;existe encore
            output.innerHTML += &#39;expiration = &#39; + Cachejs.Local.get(&#39;expiration&#39;) + &#39;&amp;lt;br&amp;gt;&#39;;

            // Dans 4 secondes j&#39;existe plus
            setTimeout(function(){ output.innerHTML += &#39;expiration = &#39; + Cachejs.Local.get(&#39;expiration&#39;) + &#39;&amp;lt;br&amp;gt;&#39; },4000);
    })();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On recharge, on attend 4 secondes et le résultat sera :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    readOnly = Je suis en lecture seule
    readOnly = Je suis en lecture seule
    expiration = Je vais expirer dans 3 secondes
    expiration = null
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 13 May 2016 08:00:00 +0000</pubDate>
        <link>http://ozee31.github.io/2016/05/13/le-localstorage-en-plus-simple-et-plus-complet.html</link>
        <guid isPermaLink="true">http://ozee31.github.io/2016/05/13/le-localstorage-en-plus-simple-et-plus-complet.html</guid>
        
        
      </item>
    
      <item>
        <title>[php] Générer des PDF avec DomPDF et CakePHP</title>
        <description>&lt;h1 id=&quot;gnrer-des-pdf-avec-dompdf-et-cakephp&quot;&gt;Générer des PDF avec DomPDF et CakePHP&lt;/h1&gt;
&lt;p&gt;Grâce à la librairie &lt;a href=&quot;https://github.com/dompdf/dompdf&quot;&gt;DomPDF&lt;/a&gt; couplé au plugin &lt;a href=&quot;https://github.com/DaoAndCo/cakephp-dompdf&quot;&gt;cakephp-dompdf&lt;/a&gt;, il est très facile de générer des PDF en HTML/CSS.&lt;/p&gt;

&lt;h2 id=&quot;environnement&quot;&gt;Environnement&lt;/h2&gt;
&lt;p&gt;Voici ma configuration pour cette démo&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Une VM ubuntu server en version 14&lt;/li&gt;
  &lt;li&gt;Server Apache&lt;/li&gt;
  &lt;li&gt;PHP en version 7 (la version minimale est la 5.4.16)&lt;/li&gt;
  &lt;li&gt;CakePHP en version 3.2 (la version minimale est la 3.0)&lt;/li&gt;
  &lt;li&gt;La librairie DomPDF en version 0.7&lt;/li&gt;
  &lt;li&gt;Le plugin cakephp-dompdf en version 1.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Pour installer la librairie ainsi que le plugin, rien de plus simple en utilisant composer&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SHELL&quot;&gt;    composer require daoandco/cakephp-dompdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Très important, il ne faut pas oublié de générer les liens symboliques du plugin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SHELL&quot;&gt;    bin/cake plugin assets symlink
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On charge ensuite le plugin&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;    // config/bootstrap.php

    Plugin::load(&#39;Dompdf&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;en-route-pour-laventure&quot;&gt;En route pour l’aventure&lt;/h2&gt;
&lt;p&gt;Le plus simple pour générer les PDF est d’écouter les urls afin de traiter l’extension &lt;code class=&quot;highlighter-rouge&quot;&gt;.pdf&lt;/code&gt; (&lt;a href=&quot;http://book.cakephp.org/3.0/fr/development/routing.html#routing-des-extensions-de-fichier&quot;&gt;Documentation&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;On va donc, pour l’exemple définir une &lt;del&gt;auto&lt;/del&gt; route.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;Router::scope(&#39;/&#39;, function (RouteBuilder $routes) {
    $routes-&amp;gt;extensions([&#39;pdf&#39;]);
    $routes-&amp;gt;connect(&#39;/demo/view/*&#39;, [&#39;controller&#39; =&amp;gt; &#39;Demo&#39;, &#39;action&#39; =&amp;gt; &#39;view&#39;]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et pour le controlleur :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;// scr/Controller/DemoController.php

namespace App\Controller;

class DemoController extends AppController {

    public function view($name) {

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On teste notre route http://localhost/demo/view/test.pdf et &lt;strong&gt;bim!!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/87TellwMnUAMrKZfakHSiIqnmuxd9fGbRzKS4B--_XAqaC7X9wDa00-i5rFXesNMtaWSrGcY8Q=s0&quot; alt=&quot;Template is missing&quot; title=&quot;capture-1.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ne vous inquiétez pas, c’est normal, pas de panique on a pas encore créé notre template.&lt;/p&gt;

&lt;h2 id=&quot;jai-view-un-pdf&quot;&gt;J’ai view un PDF&lt;/h2&gt;

&lt;p&gt;Comme on écoute toujours la maîtresse et que l’on est bien sage, on va créer notre fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;view.ctp&lt;/code&gt; dans &lt;code class=&quot;highlighter-rouge&quot;&gt;Demo/pdf/view.ctp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;!-- src/Template/Demo/pdf/view.ctp --&amp;gt;

&amp;lt;h1&amp;gt;Ceci est un pédéhèffe&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;Il est généré avec Dôme Pédéhèffe&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hey, t’est bien gentil mais là il me demande de créer un layout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oui je sais mais comme la vie est bien faite, notre petit plugin inclut justement un Layout qui nous permet entre autre de fixer un header ainsi qu’un footer.&lt;/p&gt;

&lt;h2 id=&quot;plugue-ton-layout&quot;&gt;Plugue ton Layout&lt;/h2&gt;

&lt;p&gt;Pour faire les choses bien (il faut toujours faire les choses bien), on va modifier notre Controller&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-PHP&quot;&gt;public function view($name) {

    $this-&amp;gt;viewBuilder()
        -&amp;gt;className(&#39;Dompdf.Pdf&#39;)
        -&amp;gt;layout(&#39;Dompdf.default&#39;)
        -&amp;gt;options([&#39;config&#39; =&amp;gt; [
            &#39;filename&#39; =&amp;gt; $name,
            &#39;render&#39; =&amp;gt; &#39;browser&#39;,
    ]]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On recharge la page, et là, sous vos yeux ébahis, un magnifique PDF apparaît dans votre Firefox (comment ça vous n’utilisez pas Firefox ?)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/tJcFxm3bITPAfJTdhNHRi6uTtsMGIdxvIFhe9xNq3yJWwIF2TkqI8IcFItt7Upx2MHPvRC7sqA=s0&quot; alt=&quot;Le pdf généré&quot; title=&quot;capture-2.JPG&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tout ça juste pour charger un Layout ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En fait on a surtout dit à CakePHP d’utiliser le plugin pour générer la vue, je vous invite à lire &lt;a href=&quot;https://github.com/DaoAndCo/cakephp-dompdf#configuration&quot;&gt;la documentation du plugin&lt;/a&gt; pour comprendre ce que je viens de faire.&lt;/p&gt;

&lt;h2 id=&quot;je-veux-du-css-et-des-nanas&quot;&gt;Je veux du CSS et des nanas&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bon les h1 et les p c’est bien gentil mais comment je style ça ? Et les images comment ça marche ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On y viens, et on va même faire un header et un footer comme je suis gentil.&lt;/p&gt;

&lt;p&gt;Allez c’est parti on crée notre beau css&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-CSS&quot;&gt;/* webroot/css/demo.css */

h1 {
    color: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et comme tout est prévu, notre beau petit plugin possède un helper, on peut donc modifier notre fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;view.ctp&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;!-- src/Template/Demo/pdf/view.ctp --&amp;gt;

&amp;lt;?= $this-&amp;gt;Dompdf-&amp;gt;css(&#39;demo&#39;); ?&amp;gt;

&amp;lt;h1&amp;gt;Ceci est un pédéhèffe&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;Il est généré avec Dôme Pédéhèffe&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ah oui, j’oubliais les nanas, pour les images c’est aussi avec le helper (et on en profite pour rajouter le header et le footer)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;!-- src/Template/Demo/pdf/view.ctp --&amp;gt;

&amp;lt;?= $this-&amp;gt;Dompdf-&amp;gt;css(&#39;demo&#39;); ?&amp;gt;

&amp;lt;?php
$this-&amp;gt;start(&#39;header&#39;);
    echo &#39;&amp;lt;p&amp;gt;I\&#39;m a header&amp;lt;/p&amp;gt;&#39;;
$this-&amp;gt;end();

$this-&amp;gt;start(&#39;footer&#39;);
    echo &#39;&amp;lt;p&amp;gt;I\&#39;m a footer&amp;lt;/p&amp;gt;&#39;;
$this-&amp;gt;end();
?&amp;gt;

&amp;lt;h1&amp;gt;Ceci est un pédéhèffe&amp;lt;/h1&amp;gt;

&amp;lt;p&amp;gt;Il est généré avec Dôme Pédéhèffe&amp;lt;/p&amp;gt;

&amp;lt;?= $this-&amp;gt;Dompdf-&amp;gt;image(&#39;nanas.jpg&#39;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On actualise la page, et voilà notre PDF stylé comme jamais
&lt;img src=&quot;https://lh3.googleusercontent.com/4zy5TzBYp6cT4PDG_S7-V7yzX9J5BIyze5Uj-fHTpJBN7XY0NymbLGRjkvQedxVNIx9Dm6RYwg=s0&quot; alt=&quot;enter image description here&quot; title=&quot;capture-3.JPG&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;aller-plus-loin&quot;&gt;Aller plus loin&lt;/h2&gt;
&lt;p&gt;Je vous invite à lire la &lt;a href=&quot;https://github.com/DaoAndCo/cakephp-dompdf&quot;&gt;documentation&lt;/a&gt; du plugin qui est très complète.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2016 12:00:00 +0000</pubDate>
        <link>http://ozee31.github.io/2016/05/04/generer-des-pdf-avec-dompdf-et-cakephp.html</link>
        <guid isPermaLink="true">http://ozee31.github.io/2016/05/04/generer-des-pdf-avec-dompdf-et-cakephp.html</guid>
        
        
      </item>
    
  </channel>
</rss>
